define(["controller/controllers","libs/underscore","libs/nv.d3"],function(e,t,n){e.controller("MetricCtrl",["$scope","$http",function(r,i){r.loadMetrics=function(){i.get("/api/admin/metrics/fetch").success(function(e){r.fetchedMetrics=t.flatten(e),r.averagedMetrics=_averageMetrics(r.fetchedMetrics),r.metrics=_chooseMetrics(),_loadGraph()})},r.refresh=function(){r.loadMetrics()},r.sortBy=function(e){_sortBy(e,"sortField","sortOrder")},r.showID=function(){return r.averageNodes?"hide-id":"show-id"},_avgArr=function(e){return _sum(e)/t.size(e)},_sum=function(e){return t.reduce(e,function(e,t){return e+t},0)},_averageObjs=function(e,n){var r=t.size(e);if(r==0)return{};var i={},s=t.keys(e[0]);return t.each(s,function(r){t.has(n,r)?i[r]=n[r](t.pluck(e,r)):t.isNumber(e[0][r])?i[r]=_avgArr(t.pluck(e,r)):i[r]=e[0][r]}),i},_averageMetrics=function(e){return t.chain(r.fetchedMetrics).groupBy("name").map(function(e){return _averageObjs(e,{min:t.min,max:t.max,count:_sum})}).value()},_chooseMetrics=function(){return r.averageNodes?r.averagedMetrics:r.fetchedMetrics},_sortBy=function(e,t,n){r[t]===e?r[n]=!r[n]:r[n]=!1,r[t]=e},r.$watch("averageNodes",function(e){r.metrics=_chooseMetrics()}),r.averageNodes=!0,r.loadMetrics(),_formatDataForGraph=function(e){var n=[],r=[],i=[],s=[];return t.chain(e).filter(function(e){switch(e.type){case"TIMER":return!0;default:return!1}}).each(function(e,t){n.push({x:t,y:e.min,units:e.durationUnit,metricName:e.name}),i.push({x:t,y:e.median,units:e.durationUnit,metricName:e.name}),r.push({x:t,y:e.mean,units:e.durationUnit,metricName:e.name}),s.push({x:t,y:e.max,units:e.durationUnit,metricName:e.name})}),[{key:"Min",values:n},{key:"Median",values:i},{key:"Average",values:r},{key:"Max",values:s}]},_loadGraph=function(){n.addGraph(function(){var e=n.models.multiBarChart();return e.showControls(!1),e.tooltipContent(function(e,t,n,r,i){return"<h3>"+r.point.metricName+"</h3>"+"<p>"+n+" "+r.point.units+"</p>"}),e.xAxis.axisLabel("Metrics").tickFormat(d3.format(",f")),e.yAxis.axisLabel("Time").tickFormat(d3.format(",.1f")),d3.select("#chart1 svg").datum(_formatDataForGraph(r.averagedMetrics)).transition().duration(250).call(e),n.utils.windowResize(e.update),e})}}])})