define(["controller/controllers","libs/underscore"],function(e,t){e.controller("MetricCtrl",["$scope","$http",function(n,r){n.loadMetrics=function(){r.get("/api/admin/metrics/fetch").success(function(e){n.fetchedMetrics=t.flatten(e),n.metrics=_processMetrics()})},n.refresh=function(){n.loadMetrics()},n.sortTimerBy=function(e){_sortBy(e,"timerSortField","timerSortOrder")},n.sortMeterBy=function(e){_sortBy(e,"meterSortField","meterSortOrder")},n.showID=function(){return n.averageNodes?"hide-id":"show-id"},_averageObjs=function(e){var n=t.size(e);if(n==0)return{};var r={},i=t.keys(e[0]);return t.each(i,function(i){if(t.isNumber(e[0][i])){var s=t.chain(e).pluck(i).reduce(function(e,t){return e+t},0).value();r[i]=s/n}else r[i]=e[0][i]}),r},_processMetrics=function(){return n.averageNodes?t.chain(n.fetchedMetrics).groupBy("name").map(function(e){return _averageObjs(e)}).value():n.fetchedMetrics},_sortBy=function(e,t,r){n[t]===e?n[r]=!n[r]:n[r]=!1,n[t]=e},n.$watch("averageNodes",function(e){n.metrics=_processMetrics()}),n.averageNodes=!0,n.loadMetrics(),n.sortTimerBy("name"),n.sortMeterBy("count"),n.timerSortOrder=!1,n.meterSortOrder=!0}])})